import { WebSocketServer } from 'ws';
import http from 'http';
import TelegramBot from 'node-telegram-bot-api';
import dotenv from 'dotenv';
dotenv.config();

const PORT = process.env.PORT || 3001;
const TOKEN = process.env.TELEGRAM_TOKEN;
const site = process.env.URL;

// --- WebSocket —Å–µ—Ä–≤–µ—Ä ---
const server = http.createServer();
const wss = new WebSocketServer({ server });

let currentPost = null;

wss.on('connection', (ws) => {
  console.log('üü¢ –ö–ª–∏–µ–Ω—Ç –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è');
  if (currentPost) {
    ws.send(JSON.stringify(currentPost));
  }

  ws.on('close', () => console.log('üî¥ –ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–ª—é—á–∏–ª—Å—è'));
});

function broadcastPost(post) {
  currentPost = post;
  const data = JSON.stringify(post);
  wss.clients.forEach((client) => {
    if (client.readyState === 1) {
      client.send(data);
    }
  });
}

// --- Telegram –±–æ—Ç ---
const bot = new TelegramBot(TOKEN, { polling: true });
const pendingPosts = {};

bot.on('message', async (msg) => {
  const chatId = msg.chat.id;

  if (msg.text && msg.text.startsWith('/url')) {
    bot.sendMessage(chatId, `${site}`);
    return;
  }

  // /post —Ç–µ–∫—Å—Ç
  if (msg.text && msg.text.startsWith('/post ')) {
    const text = msg.text.slice(6).trim();
    if (!text) {
      return bot.sendMessage(chatId, '–£–∫–∞–∂–∏ —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã: /post —Ç–≤–æ–π —Ç–µ–∫—Å—Ç');
    }

    pendingPosts[chatId] = { text };

    // –û—á–∏—Å—Ç–∫–∞ —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã
    setTimeout(() => delete pendingPosts[chatId], 120000);

    bot.sendMessage(chatId, '–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫ –ø–æ—Å—Ç—É');
    return;
  }

  // –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–∞
  if (msg.photo && pendingPosts[chatId]) {
    const photo = msg.photo[msg.photo.length - 1];

    try {
      const file = await bot.getFile(photo.file_id);
      const image = `https://api.telegram.org/file/bot${TOKEN}/${file.file_path}`;
      const text = pendingPosts[chatId].text;

      const post = { text, image };
      broadcastPost(post);

      bot.sendMessage(chatId, '‚úÖ –ü–æ—Å—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω –∏ –æ—Ç–æ–±—Ä–∞–∂—ë–Ω –Ω–∞ —Å–∞–π—Ç–µ');
    } catch (err) {
      bot.sendMessage(chatId, '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ');
    }

    delete pendingPosts[chatId];
    return;
  }

  // –ï—Å–ª–∏ –ø—Ä–∏—Å–ª–∞–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ñ–æ—Ç–æ –∏–ª–∏ —Ç–µ–∫—Å—Ç –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è /post
  if (!pendingPosts[chatId] && msg.photo) {
    bot.sendMessage(chatId, '–°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤—å /post —Ç–µ–∫—Å—Ç, –ø–æ—Ç–æ–º —Ñ–æ—Ç–æ');
  }
});

server.listen(PORT, () => {
  console.log(`WebSocket —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç ${PORT}`);
});
